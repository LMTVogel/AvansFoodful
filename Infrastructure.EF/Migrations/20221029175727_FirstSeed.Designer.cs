// <auto-generated />
using System;
using Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.EF.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20221029175727_FirstSeed")]
    partial class FirstSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Domain.Canteen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CanteenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HotMeals")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Canteens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanteenName = "LA",
                            City = "Breda",
                            HotMeals = true
                        },
                        new
                        {
                            Id = 2,
                            CanteenName = "LD",
                            City = "Breda",
                            HotMeals = true
                        },
                        new
                        {
                            Id = 3,
                            CanteenName = "HA",
                            City = "Breda",
                            HotMeals = true
                        },
                        new
                        {
                            Id = 4,
                            CanteenName = "TB",
                            City = "Tilburg",
                            HotMeals = false
                        },
                        new
                        {
                            Id = 5,
                            CanteenName = "DB",
                            City = "Den Bosch",
                            HotMeals = false
                        });
                });

            modelBuilder.Entity("Core.Domain.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CanteenId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeNr")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CanteenId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanteenId = 1,
                            Email = "arend@avans.nl",
                            EmployeeNr = 1000,
                            Name = "Arend Vliet"
                        },
                        new
                        {
                            Id = 2,
                            CanteenId = 2,
                            Email = "gerard@avans.nl",
                            EmployeeNr = 2000,
                            Name = "Gerard Kok"
                        },
                        new
                        {
                            Id = 3,
                            CanteenId = 3,
                            Email = "thomas@avans.nl",
                            EmployeeNr = 3000,
                            Name = "Thomas Trein"
                        });
                });

            modelBuilder.Entity("Core.Domain.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CanteenId")
                        .HasColumnType("int");

                    b.Property<bool>("ContainsAlcohol")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MaxPickupTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PickupDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("smallmoney");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CanteenId");

                    b.HasIndex("StudentId");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanteenId = 1,
                            ContainsAlcohol = false,
                            MaxPickupTime = new DateTime(2022, 12, 22, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            MealType = "Brood",
                            Name = "Gezond pakket",
                            PickupDateTime = new DateTime(2022, 12, 22, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 6m
                        },
                        new
                        {
                            Id = 2,
                            CanteenId = 2,
                            ContainsAlcohol = false,
                            MaxPickupTime = new DateTime(2022, 12, 22, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            MealType = "Warme vondmaaltijd",
                            Name = "Lekker in de avond",
                            PickupDateTime = new DateTime(2022, 12, 22, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 7m
                        });
                });

            modelBuilder.Entity("Core.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("ContainsAlcohol")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContainsAlcohol = false,
                            Name = "Banaan smoothie",
                            ProductImage = "https://i.imgur.com/hJHKdzi.jpg"
                        },
                        new
                        {
                            Id = 2,
                            ContainsAlcohol = false,
                            Name = "Broodje bacon, ei, kaas",
                            ProductImage = "https://i.imgur.com/rA8TaIL.jpg"
                        },
                        new
                        {
                            Id = 3,
                            ContainsAlcohol = false,
                            Name = "Broodje Unox",
                            ProductImage = "https://i.imgur.com/BcdzaoG.jpg"
                        },
                        new
                        {
                            Id = 4,
                            ContainsAlcohol = false,
                            Name = "Cheeseburger",
                            ProductImage = "https://i.imgur.com/YX5YYKB.jpg"
                        },
                        new
                        {
                            Id = 5,
                            ContainsAlcohol = false,
                            Name = "Plant based burger",
                            ProductImage = "https://i.imgur.com/K1LfUCP.jpg"
                        },
                        new
                        {
                            Id = 6,
                            ContainsAlcohol = true,
                            Name = "Gluhwein",
                            ProductImage = "https://i.imgur.com/T5rn9hV.jpg"
                        },
                        new
                        {
                            Id = 7,
                            ContainsAlcohol = false,
                            Name = "Banaan",
                            ProductImage = "https://i.imgur.com/ccLWJP7.jpg"
                        },
                        new
                        {
                            Id = 8,
                            ContainsAlcohol = false,
                            Name = "Appel",
                            ProductImage = "https://i.imgur.com/bMMCN0r.jpg"
                        },
                        new
                        {
                            Id = 9,
                            ContainsAlcohol = false,
                            Name = "Broodje gezond",
                            ProductImage = "https://i.imgur.com/bUOh9Cc.jpg"
                        },
                        new
                        {
                            Id = 10,
                            ContainsAlcohol = false,
                            Name = "Tomatensoep",
                            ProductImage = "https://i.imgur.com/CQKfs4O.jpg"
                        },
                        new
                        {
                            Id = 11,
                            ContainsAlcohol = false,
                            Name = "Kippensoep",
                            ProductImage = "https://i.imgur.com/FOdxUth.jpg"
                        });
                });

            modelBuilder.Entity("Core.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentNr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2001, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Breda",
                            Email = "lmt.vogel@student.avans.nl",
                            Name = "Luuk Vogel",
                            PhoneNumber = "+31640942653",
                            StudentNr = 2181163
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2001, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Breda",
                            Email = "rm.vandergaag@student.avans.nl",
                            Name = "Rogier van der Gaag",
                            PhoneNumber = "+31612345678",
                            StudentNr = 2181162
                        });
                });

            modelBuilder.Entity("PackageProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "PackageId");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageProduct");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            PackageId = 1
                        },
                        new
                        {
                            ProductId = 7,
                            PackageId = 1
                        },
                        new
                        {
                            ProductId = 8,
                            PackageId = 1
                        },
                        new
                        {
                            ProductId = 9,
                            PackageId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            PackageId = 2
                        },
                        new
                        {
                            ProductId = 6,
                            PackageId = 2
                        },
                        new
                        {
                            ProductId = 10,
                            PackageId = 2
                        });
                });

            modelBuilder.Entity("Core.Domain.Employee", b =>
                {
                    b.HasOne("Core.Domain.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("CanteenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteen");
                });

            modelBuilder.Entity("Core.Domain.Package", b =>
                {
                    b.HasOne("Core.Domain.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("CanteenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Canteen");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PackageProduct", b =>
                {
                    b.HasOne("Core.Domain.Package", null)
                        .WithMany()
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
